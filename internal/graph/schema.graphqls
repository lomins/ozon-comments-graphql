type Post {
  id: ID!
  title: String!
  content: String!
  comments: [Comment!]!
  commentsDisabled: Boolean!
}

type Comment {
  id: ID!
  postId: ID!
  parentId: ID
  content: String!
  children: [Comment!]!
  createdAt: String!
}

type CommentPage {
  comments: [Comment!]!
  totalCount: Int!
}

type Query {
  posts: [Post!]!
  post(id: ID!): Post
  comments(postId: ID!, limit: Int!, offset: Int!): CommentPage!
}

type Mutation {
  createPost(title: String!, content: String!, commentsDisabled: Boolean!): Post!
  createComment(postId: ID!, parentId: ID, content: String!): Comment!
  disableComments(postId: ID!): Post!
}

type Subscription {
  commentAdded(postId: ID!): Comment!
}

schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}
